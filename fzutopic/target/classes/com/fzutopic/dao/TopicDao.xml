<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzutopic.dao.TopicDao">
  <resultMap id="BaseResultMap" type="com.fzutopic.model.Topic">
    <id column="topicID" jdbcType="CHAR" property="topicid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="unlikes" jdbcType="INTEGER" property="unlikes" />
    <result column="userID" jdbcType="CHAR" property="userid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="isAnony" jdbcType="INTEGER" property="isanony" />
    <result column="views" jdbcType="INTEGER" property="views" />
    <result column="heats" jdbcType="INTEGER" property="heats" />
    <result column="commentCount" jdbcType="INTEGER" property="commentcount" />
    <result column="auditStatus" jdbcType="INTEGER" property="auditstatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fzutopic.model.Topic">
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    topicID, title, likes, unlikes, userID, `time`, isAnony, views, heats, commentCount, 
    auditStatus
  </sql>
  <sql id="Blob_Column_List">
    `text`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fzutopic.model.TopicExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fzutopic.model.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    where topicID = #{topicid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from topic
    where topicID = #{topicid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fzutopic.model.TopicExample">
    delete from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="topicID" keyProperty="topicid" parameterType="com.fzutopic.model.Topic" useGeneratedKeys="true">
    insert into topic (title, likes, unlikes, 
      userID, `time`, isAnony, 
      views, heats, commentCount, 
      auditStatus, `text`)
    values (#{title,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, #{unlikes,jdbcType=INTEGER}, 
      #{userid,jdbcType=CHAR}, #{time,jdbcType=TIMESTAMP}, #{isanony,jdbcType=INTEGER}, 
      #{views,jdbcType=INTEGER}, #{heats,jdbcType=INTEGER}, #{commentcount,jdbcType=INTEGER}, 
      #{auditstatus,jdbcType=INTEGER}, #{text,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="topicID" keyProperty="topicid" parameterType="com.fzutopic.model.Topic" useGeneratedKeys="true">
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="unlikes != null">
        unlikes,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="isanony != null">
        isAnony,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="heats != null">
        heats,
      </if>
      <if test="commentcount != null">
        commentCount,
      </if>
      <if test="auditstatus != null">
        auditStatus,
      </if>
      <if test="text != null">
        `text`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="unlikes != null">
        #{unlikes,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=CHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="isanony != null">
        #{isanony,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        #{views,jdbcType=INTEGER},
      </if>
      <if test="heats != null">
        #{heats,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="auditstatus != null">
        #{auditstatus,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fzutopic.model.TopicExample" resultType="java.lang.Long">
    select count(*) from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topic
    <set>
      <if test="record.topicid != null">
        topicID = #{record.topicid,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.unlikes != null">
        unlikes = #{record.unlikes,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=CHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isanony != null">
        isAnony = #{record.isanony,jdbcType=INTEGER},
      </if>
      <if test="record.views != null">
        views = #{record.views,jdbcType=INTEGER},
      </if>
      <if test="record.heats != null">
        heats = #{record.heats,jdbcType=INTEGER},
      </if>
      <if test="record.commentcount != null">
        commentCount = #{record.commentcount,jdbcType=INTEGER},
      </if>
      <if test="record.auditstatus != null">
        auditStatus = #{record.auditstatus,jdbcType=INTEGER},
      </if>
      <if test="record.text != null">
        `text` = #{record.text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update topic
    set topicID = #{record.topicid,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      unlikes = #{record.unlikes,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=CHAR},
      `time` = #{record.time,jdbcType=TIMESTAMP},
      isAnony = #{record.isanony,jdbcType=INTEGER},
      views = #{record.views,jdbcType=INTEGER},
      heats = #{record.heats,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
      auditStatus = #{record.auditstatus,jdbcType=INTEGER},
      `text` = #{record.text,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topic
    set topicID = #{record.topicid,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      unlikes = #{record.unlikes,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=CHAR},
      `time` = #{record.time,jdbcType=TIMESTAMP},
      isAnony = #{record.isanony,jdbcType=INTEGER},
      views = #{record.views,jdbcType=INTEGER},
      heats = #{record.heats,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
      auditStatus = #{record.auditstatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzutopic.model.Topic">
    update topic
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="unlikes != null">
        unlikes = #{unlikes,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userID = #{userid,jdbcType=CHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="isanony != null">
        isAnony = #{isanony,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="heats != null">
        heats = #{heats,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        commentCount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="auditstatus != null">
        auditStatus = #{auditstatus,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        `text` = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where topicID = #{topicid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fzutopic.model.Topic">
    update topic
    set title = #{title,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      unlikes = #{unlikes,jdbcType=INTEGER},
      userID = #{userid,jdbcType=CHAR},
      `time` = #{time,jdbcType=TIMESTAMP},
      isAnony = #{isanony,jdbcType=INTEGER},
      views = #{views,jdbcType=INTEGER},
      heats = #{heats,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      auditStatus = #{auditstatus,jdbcType=INTEGER},
      `text` = #{text,jdbcType=LONGVARCHAR}
    where topicID = #{topicid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzutopic.model.Topic">
    update topic
    set title = #{title,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      unlikes = #{unlikes,jdbcType=INTEGER},
      userID = #{userid,jdbcType=CHAR},
      `time` = #{time,jdbcType=TIMESTAMP},
      isAnony = #{isanony,jdbcType=INTEGER},
      views = #{views,jdbcType=INTEGER},
      heats = #{heats,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      auditStatus = #{auditstatus,jdbcType=INTEGER}
    where topicID = #{topicid,jdbcType=CHAR}
  </update>
</mapper>