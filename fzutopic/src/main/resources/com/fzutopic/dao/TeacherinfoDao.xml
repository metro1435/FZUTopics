<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzutopic.dao.TeacherinfoDao">
  <resultMap id="BaseResultMap" type="com.fzutopic.model.Teacherinfo">
    <id column="teacherID" jdbcType="CHAR" property="teacherid" />
    <result column="teacherName" jdbcType="VARCHAR" property="teachername" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="college" jdbcType="VARCHAR" property="college" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fzutopic.model.Teacherinfo">
    <result column="info" jdbcType="LONGVARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacherID, teacherName, tel, QQ, college
  </sql>
  <sql id="Blob_Column_List">
    info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fzutopic.model.TeacherinfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacherinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fzutopic.model.TeacherinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacherinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacherinfo
    where teacherID = #{teacherid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacherinfo
    where teacherID = #{teacherid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fzutopic.model.TeacherinfoExample">
    delete from teacherinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="teacherID" keyProperty="teacherid" parameterType="com.fzutopic.model.Teacherinfo" useGeneratedKeys="true">
    insert into teacherinfo (teacherName, tel, QQ, 
      college, info)
    values (#{teachername,jdbcType=VARCHAR}, #{tel,jdbcType=CHAR}, #{qq,jdbcType=VARCHAR}, 
      #{college,jdbcType=VARCHAR}, #{info,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="teacherID" keyProperty="teacherid" parameterType="com.fzutopic.model.Teacherinfo" useGeneratedKeys="true">
    insert into teacherinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teachername != null">
        teacherName,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=CHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fzutopic.model.TeacherinfoExample" resultType="java.lang.Long">
    select count(*) from teacherinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacherinfo
    <set>
      <if test="record.teacherid != null">
        teacherID = #{record.teacherid,jdbcType=CHAR},
      </if>
      <if test="record.teachername != null">
        teacherName = #{record.teachername,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=CHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update teacherinfo
    set teacherID = #{record.teacherid,jdbcType=CHAR},
      teacherName = #{record.teachername,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=CHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacherinfo
    set teacherID = #{record.teacherid,jdbcType=CHAR},
      teacherName = #{record.teachername,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=CHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzutopic.model.Teacherinfo">
    update teacherinfo
    <set>
      <if test="teachername != null">
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="qq != null">
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where teacherID = #{teacherid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fzutopic.model.Teacherinfo">
    update teacherinfo
    set teacherName = #{teachername,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=CHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      info = #{info,jdbcType=LONGVARCHAR}
    where teacherID = #{teacherid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzutopic.model.Teacherinfo">
    update teacherinfo
    set teacherName = #{teachername,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=CHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR}
    where teacherID = #{teacherid,jdbcType=CHAR}
  </update>
<!--  221701416å¢ž-->
  <select id="selectAllTeacher" resultType="com.fzutopic.view.TeacherName">
    select teacherID, teacherName
    from teacherinfo
    where 1=1
  </select>
</mapper>